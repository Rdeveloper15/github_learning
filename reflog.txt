20].git stash
= 'git stash' is used to temporarily save uncommitted changes (both staged and unstaged) in a clean state
= git stash is helps to when you work on something else, Switch branches without committing incomplete work etc...
= git stash temporarily remove the changes on working direactery or staging area and you can apply it after your action is done
git stash = unchanged and staged changes are saved on stash.
git stash pop
git stash apply
by default Git won't stash changes made to untracked or ignored files.
git stash -u or git stash --include-untracked  is tell to stash untracked files also.
git stash -a or git stash --all  for include untracked and ignore file also.
you can run multiple stash, git stash list (show all stash, in folowwing order, 'stash@{number}: WIP on <branch for stash>: <commit which on top you create stash> our new homepage"  WIP = work in progress)
git stash save "message",  message displays instaed of :<commit> our new homepage during stash list.
git stash pop recent stash is reapply stash@{0},  you can choose git stash pop stash@{number} for reapply it.
stash is used to save your changes for later.
git stash show   summery for stash
git stash show -p or git stash show --patch    full detail summery of stash
git stash -p or git stash --patch    convert your changes in smaller hunk and iterate through each hunk and now you can decide weather you went to stash it ot not.
sometimes git stash is diverged from your branch and it runs you into conflicts so here use     git stash branch <branch_name> stash@{1}  create new branch from commit which your create stash and apply this stash on that branch.
git stash drop stash@{1}  for dropd your stash.
git stash clear for drop all stash.
link: https://chatgpt.com/c/6877f65e-0984-800f-b28d-6be8927799a8

-   stash reflog: Shows all stash operations (when you stashed and applied)
= git reflog mainly used for When you done something by mistack(bad rebase, delete branch, hard reset the commit) and now you went to reset the changes.
= in your repo when you do commit, checkout branch, remove any commit, perform rebase, merge, pull, amend in commit, create or pop stash. then one entry is add in reflog of that repo according to type of reflog.
= git reflog store in .git/logs/refs/heads/., .git/logs/HEAD, and also .git/logs/refs/stash folder of '.git' folder
= USES OF GIT REFLOG =
-   When accidently amend in commit in particular branch then for reset
    git checkout -b new_branch <commit before amend>    =   branch created from that commit.here in new branch commit history is created from down of that commit
    git reset --hard HEAD@{n}/hash of that commmit   =   make your current branch at commit of HEAD@{n}
- you can revert merge, rebase or pull process as well.
